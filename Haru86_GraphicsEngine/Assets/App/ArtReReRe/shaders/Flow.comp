R"(
#version 430

// thread
layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

// Uniform 
uniform float _time;
uniform float _deltaTime;
uniform vec4 _WallHalfSize;
uniform int _FlowGridX;
uniform int _FlowGridY;

struct SFlowData
{
	vec4 Data;
};

layout(std430, binding = 2) buffer FlowDataBuffer
{
	SFlowData flowData[];
} rw_FlowDataBuffer;

#define pi 3.1415

void main()
{
	uvec2 DID = gl_GlobalInvocationID.xy;
	float angle = pi * (float(DID.x) / float(_FlowGridX - 1));
	
	uint ID = DID.y * _FlowGridX + DID.x;
	rw_FlowDataBuffer.flowData[ID].Data.w = angle;
}

)"