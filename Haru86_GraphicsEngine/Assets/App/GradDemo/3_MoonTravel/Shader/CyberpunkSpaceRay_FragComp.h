/* File generated with Shader Minifier 1.3.1
 * http://www.ctrl-alt-test.fr
 */

// E:\CppDev\GradDemo\Haru86_GraphicsEngine\Assets\App\GradDemo\3_MoonTravel\Shader\CyberpunkSpaceRay_Frag.h
"#version 330\n"
 "uniform float _time;"
 "uniform vec2 _resolution;"
 "uniform float _RenderingTarget;"
 "uniform vec3 _WorldCameraPos,_WorldCameraCenter;"
 "uniform float _LeaveStartTime,_Alpha;"
 "in vec2 uv;\n"
 "#define pi 3.14159265\n"
 "#define rot(a)mat2(cos(a),-sin(a),sin(a),cos(a))\n"
 "#define dmin 0.0003\n"
 "#define tmax 30.0\n"
 "#define ldir normalize(vec3(1.0,1.0,-1.0))\n"
 "vec3 v;"
 "int i;"
 "float d;struct mapr{float d;bool hit;int m;};"
 "void f(inout mapr v,float i,int f,bool d)"
 "{"
   "if(d)"
     "{"
       "if(i<v.d)"
         "v=mapr(i,false,f);"
       "if(v.d<dmin)"
         "v.hit=true;"
     "}"
   "else"
     "{"
       "if(i>v.d)"
         "v=mapr(i,false,f);"
       "if(v.d<dmin)"
         "v.hit=true;"
     "}"
 "}"
 "vec3 t(vec3 v,vec3 i,vec3 f,vec3 d)"
 "{"
   "return v+=d,v.yz*=rot(i.x),v.xz*=rot(i.y),v.xy*=rot(i.z),v*=i,v;"
 "}"
 "float f(float v,float d)"
 "{"
   "return v-d*floor(v/d);"
 "}"
 "float t(vec3 v,vec3 d)"
 "{"
   "return length(max(vec3(0.),abs(v)-d));"
 "}"
 "float f(vec3 v,float d,float f)"
 "{"
   "return length(v-vec3(0.,0.,f*clamp(v.z/f,-1.,1.)))-d;"
 "}"
 "float f(vec3 d)"
 "{"
   "const float m=2.5;"
   "vec4 e,r;"
   "const int t=30;"
   "r=vec4(d,1.);"
   "e=r;"
   "for(int u=0;u<t;u++)"
     "e.xyz=clamp(e.xyz,-1.,1.)*2.-e.xyz,e*=m/clamp(dot(e.xyz,e.xyz),.5,1.),e+=r,e.xyz+=v*.1;"
   "float x=length(e.xyz)/abs(e.w);"
   "if(i==0)"
     "{"
       "float a=f(d-v,.2,.5);"
       "return max(x,-a);"
     "}"
   "else"
     " return x;"
 "}"
 "mapr t(vec3 v)"
 "{"
   "mapr i;"
   "i.d=1e3;"
   "i.hit=false;"
   "i.m=-1;"
   "f(i,f(v),2,true);"
   "return i;"
 "}"
 "vec3 p(vec3 v)"
 "{"
   "vec2 i=vec2(.001,0.);"
   "return normalize(vec3(t(v+i.xyy).d-t(v-i.xyy).d,t(v+i.yxy).d-t(v-i.yxy).d,t(v+i.yyx).d-t(v-i.yyx).d));"
 "}"
 "vec3 p(vec3 v,float d)"
 "{"
   "return smoothstep(d,1.-d,.5+.5*cos((vec3(v.x,v.x,v.x)+vec3(3.,2.,1.)/3.)*radians(360.)));"
 "}"
 "vec3 s(vec3 v,float d)"
 "{"
   "vec3 i=vec3(1.),a=fract(v*.1),e=abs(.5-a)-.5;"
   "float f=1.,x=0.;"
   "for(int m=0;m<7;m++)"
     "e=.5-abs(.5-fract(a*f))*3.,f*=3.,x=max(min(max(e.x,e.z),min(max(e.x,e.y),max(e.y,e.z)))/f,x);"
   "f=smoothstep(-(d*.001+.05),d*.001+.05,abs(.5-fract(x*900.))-.4);"
   "i=(f+.01)*.002*vec3(5.,1.,5.);"
   "vec3 m=pow(i/(abs(i)+1.),vec3(.45));"
   "return m;"
 "}"
 "vec2 s(vec2 v)"
 "{"
   "v=fract(v);"
   "float i=.123,f=0.,e=0.;"
   "i=fract(i*9184.928);"
   "float d,a;"
   "a=v.x;"
   "e+=pow(clamp(1.-abs(a),0.,1.),1e3);"
   "a=v.y;"
   "e+=pow(clamp(1.-abs(a),0.,1.),1e3);"
   "a=v.x-1.;"
   "e+=pow(clamp(3.-abs(a),0.,1.),1e3);"
   "a=v.y-1.;"
   "e+=pow(clamp(1.-abs(a),0.,1.),1e4);"
   "const int m=12;"
   "for(int r=0;r<m;r++)"
     "{"
       "d=.5+(i-.5)*.9;"
       "a=v.x-d;"
       "e+=pow(clamp(1.-abs(a),0.,1.),200.);"
       "if(a>0.)"
         "i=fract(i*4829.013),v.x=(v.x-d)/(1.-d),f+=1.;"
       "else"
         " i=fract(i*1239.528),v.x=v.x/d;"
       "v=v.yx;"
     "}"
   "f/=float(m);"
   "return vec2(e,f);"
 "}"
 "void main()"
 "{"
   "if(_RenderingTarget==2)"
     "gl_FragColor=vec4(vec3(0.),1.);"
   "else"
     "{"
       "vec2 e=uv*2.-1.;"
       "e.x*=_resolution.x/_resolution.y;"
       "float m=1.-.45*length(e);"
       "i=0;"
       "vec3 a=vec3(0.),x=vec3(0.,0.,1.5),c=vec3(0.,0.,0.);"
       "if(i==0)"
         "d=100.,x=vec3(0.,0.,-5.5+mod(.05*_time+1.,3.5));"
       "else"
         " if(i==1)"
           "d=128.,x=vec3(0.,-5.5+mod(.05*_time+1.,3.5),-5.5+mod(2.625,3.5)),c=x+vec3(0.,1.,1.);"
       "vec3 z=normalize(c-x),r=normalize(cross(vec3(0.,1.,0.),z)),u=normalize(cross(z,r)),y=normalize(e.x*r+e.y*u+m*z);"
       "v=x;"
       "float n=0.,l=0.,b=0.,o=0.;"
       "mapr k;"
       "for(;++n<d;)"
         "{"
           "k=t(x+y*(l+=k.d));"
           "if(k.d<dmin||l>tmax)"
             "break;"
           "o+=exp(-3.*k.d);"
         "}"
       "b=n/float(d);"
       "if(k.hit)"
         "if(k.m==0)"
           "a=vec3(exp(-.25*l));"
         "else"
           " if(k.m==1)"
             "a=vec3(exp(-1.*l));"
           "else"
             " if(k.m==2)"
               "{"
                 "vec3 h=x+y*l,w=p(h);"
                 "if(i==0)"
                   "a=vec3(1.,.8,.6)*max(0.,dot(normalize(vec3(1.,-1.,-1.)),w)),a*=vec3(1.)*max(0.,1.-.5*b*b);"
                 "else"
                   " a=vec3(1.,.8,.6)*15./n;"
                 "float g=0.;"
                 "vec2 C=s(h.xz*.5);"
                 "g+=C.x*max((f(length(h)-_time*1.5*2.5,10.)-9.)*2.5,0.);"
                 "if(C.x<1.3)"
                   "g=0.;"
                 "g+=max(1.-abs(dot(y,w))-.4,0.);"
                 "vec3 T=vec3(1.,1.,1.)*g*.25;"
                 "if(i==0)"
                   "{"
                     "x=h;"
                     "y=reflect(y,w);"
                     "l=.1;"
                     "n=0.;"
                     "k=mapr(0.,false,-1);"
                     "for(;++n<d*.5;)"
                       "{"
                         "k=t(x+y*(l+=k.d));"
                         "if(k.d<dmin||l>tmax)"
                           "break;"
                       "}"
                     "b=n/float(d*.5);"
                     "a+=vec3(1.)*b*.5;"
                   "}"
                 "a.x=pow(a.x,2.2);"
                 "a.y=pow(a.y,2.2);"
                 "a.z=pow(a.z,2.2);"
                 "a=clamp(a,vec3(0.),vec3(1.));"
                 "a+=T;"
               "}"
       "gl_FragColor=vec4(a,_Alpha);"
     "}"
 "}",

