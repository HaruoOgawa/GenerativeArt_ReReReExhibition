/* File generated with Shader Minifier 1.3.1
 * http://www.ctrl-alt-test.fr
 */

// E:\CppDev\GradDemo\Haru86_GraphicsEngine\Assets\App\GradDemo\5_ChangeOfMind\Shader\NegativeSphereCore_Vert.h
"#version 330\n"
 "#extension GL_ARB_separate_shader_objects:enable\n"
 "uniform mat4 MVPMatrix,MMatrix,VMatrix,PMatrix;"
 "uniform float _time,_deltaTime;"
 "uniform vec3 _CameraPos;"
 "uniform int _IsMulMatOnVert;"
 "layout(location=0) in vec3 vertex;"
 "layout(location=1) in vec3 normal;"
 "layout(location=2) in vec2 texcoord;"
 "layout(location=0) out vec2 out_uv;"
 "layout(location=1) out vec4 out_WorldVertexPos;"
 "layout(location=2) out vec4 out_WorldNormal;\n"
 "#define rot(a)mat2(cos(a),-sin(a),sin(a),cos(a))\n"
 "#define pi 3.14159265\n"
 "float t(vec3 v)"
 "{"
   "return fract(sin(dot(v,vec3(12.9898,78.233,128.852)))*43758.5453123);"
 "}"
 "float v(vec3 v)"
 "{"
   "vec3 n=floor(v),x=fract(v);"
   "float l=t(n+vec3(0.,0.,0.)),o=t(n+vec3(1.,0.,0.)),m=t(n+vec3(0.,1.,0.)),f=t(n+vec3(1.,1.,0.)),a=t(n+vec3(0.,0.,1.)),s=t(n+vec3(1.,0.,1.)),d=t(n+vec3(0.,1.,1.)),e=t(n+vec3(1.,1.,1.));"
   "vec3 i=x*x*(3.-2.*x);"
   "return mix(mix(mix(l,o,i.x),mix(m,f,i.x),i.y),mix(mix(a,s,i.x),mix(d,e,i.x),i.y),i.z);"
 "}"
 "float t(vec3 n,float o,float x,float i)"
 "{"
   "float l=0.;"
   "for(float f=0.;f<o;f++)"
     "l+=pow(.5,f)*i*v(n*pow(2.,f)*x);"
   "return l;"
 "}"
 "void main()"
 "{"
   "vec4 n=vec4(vertex,1.);"
   "float v=t(n.xyz*2.+_time*2.+100.,5.,.75,.25)*4.-1.;"
   "n.xyz+=normal.xyz*v;"
   "if(_IsMulMatOnVert==1)"
     "gl_Position=MVPMatrix*n,out_uv=texcoord,out_WorldVertexPos=MMatrix*n,out_WorldNormal=MMatrix*vec4(normalize(normal),0.);"
   "else"
     " if(_IsMulMatOnVert==0)"
       "gl_Position=n,out_uv=texcoord,out_WorldVertexPos=n,out_WorldNormal=vec4(normalize(normal),0.);"
 "}",

